source("E:/Eebf/R/example.R")
G
C = Bf_cons_pair(G)
C
length(C)
(G-1)*G/2
length(C) = (G-1)*G/2
length(C)
length(C) == (G-1)*G/2
source("E:/Eebf/R/alm_cons.R")
source("E:/Eebf/R/alm_cons.R")
source("E:/Eebf/R/example.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/example.R")
Pairs()
Pairs
L
dim(J)
dim(L)
source("C:/Users/qqing/Desktop/test_grad.R")
dist
p
gamma = matrix(0,nrow = p,ncol = J)
rho = 1
cons_gd(L,J,G,gamma,rho,Pairs)
source("E:/Eebf/R/alm_cons.R")
cons_gd(L,J,G,gamma,rho,Pairs)
source("E:/Eebf/R/alm_cons.R")
source("E:/Eebf/R/example.R")
source("C:/Users/qqing/Desktop/test_grad.R")
source("E:/Eebf/R/alm_cons.R")
source("E:/Eebf/R/example.R")
source("E:/Eebf/R/alm_cons.R")
source("E:/Eebf/R/example.R")
source("E:/Eebf/R/alm_cons.R")
source("E:/Eebf/R/example.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/alm_cons.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/example.R")
1 !=2
source("E:/Eebf/R/utils.R")
source("E:/Eebf/R/utils.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/example.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/example.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/example.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/example.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/example.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/example.R")
L
L_true
bf_dist(L_true)
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/example.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/example.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/example.R")
Q_est
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/example.R")
source("E:/Eebf/R/opt_step.R")
Q_est
source("E:/Eebf/R/example_bic.R")
source("E:/Eebf/R/example_bic.R")
source("E:/Eebf/R/bic_step.R")
source("E:/Eebf/R/example_bic.R")
source("E:/Eebf/R/bic_step.R")
source("E:/Eebf/R/bic_step.R")
source("E:/Eebf/R/example_bic.R")
G_est
G_min = 4
G_max = 6
for (g in G_min : G_max){print(g)}
source("E:/Eebf/R/bic_step.R")
source("E:/Eebf/R/example_bic.R")
G_est
source("E:/Eebf/R/bic_step.R")
source("E:/Eebf/R/example_bic.R")
G_est
6*5/2 - 4*5/2
5*log(2000)
source("E:/Eebf/R/example_estimation.R")
L_true
round(L_true,2)
source("E:/Eebf/R/bic_step.R")
source("E:/Eebf/R/example_bic.R")
round(L_true,2)
source("E:/Eebf/R/example_bic.R")
Psi_true
G*(G-1)
5*log(2000)
2000*0.05
source("E:/Eebf/R/eval.R")
BF_permutation(3)
library(gtools)
source("E:/Eebf/R/eval.R")
BF_permutation(3)
elements <- 1:G
G
G=3
elements <- 1:G
all_perms <- permutations(G, G, v = elements)
all_perms
permutation_matrices <- lapply(all_perms, function(perm) {
mat <- matrix(0, nrow = G, ncol = G)
for (i in 1:G) {
mat[i, perm[i]] <- 1
}
mat
})
permutation_matrices
dim(all_perms)
source("E:/Eebf/R/eval.R")
Mat_list = BF_permutation(G)
source("E:/Eebf/R/eval.R")
Mat_list = BF_permutation(G)
Mat_list[[1]]
Mat_list
length(list())
source("E:/Eebf/R/eval.R")
sign(y)
y
diag(y)
diag(diag(y))
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/utils.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/alm_cons.R")
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/generator.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/alm_cons.R")
source("E:/Eebf/R/utils.R")
source("E:/Eebf/R/example_estimation.R")
nll_est
nll_cal
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
G
Rot_list = BF_permutation(G)
Rot_list
lenght(Rot_list)
length(Rot_list)
source("E:/Eebf/R/example_estimation.R")
EMC
ncol(L_est)
source("E:/Eebf/R/eval.R")
MSE_results = MSE_parameter(plist,tlist)
source("E:/Eebf/R/eval.R")
MSE_results = MSE_parameter(plist,tlist)
source("E:/Eebf/R/eval.R")
MSE_results = MSE_parameter(plist,tlist)
source("E:/Eebf/R/eval.R")
MSE_results = MSE_parameter(plist,tlist)
source("E:/Eebf/R/eval.R")
MSE_results = MSE_parameter(plist,tlist)
source("E:/Eebf/R/eval.R")
MSE_results = MSE_parameter(plist,tlist)
source("E:/Eebf/R/eval.R")
MSE_results = MSE_parameter(plist,tlist)
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
G=3
x = runif(G*(G-1)/2,min=-0.5,max=0.5)
x
Phi = stan_trans(x,G)
Phi
t(Phi) %*% Phi
G
J=15
source("E:/Eebf/R/utils.R")
source("C:/Users/qqing/Desktop/test_grad.R")
dist
nll_est
source("E:/Eebf/R/example_estimation.R")
Q_est
nll_est
source("E:/Eebf/R/example_estimation.R")
nll_est
source("E:/Eebf/R/example_estimation.R")
nll_est
source("E:/Eebf/R/bic_step.R")
source("E:/Eebf/R/example_bic.R")
source("E:/Eebf/R/eval.R")
#results = Ebfa_solver(S=S,G=g)
Q_est = results$Q_est
L_est = results$L_est
Psi_est = results$Psi_est
D_est = results$D_est
nll_est = results$nll_est
nll_cal = nll(L_est,Psi_est,D_est,S)
EMC = Exact_matching(Q,Q_est)
plist = list(
L_est = L_est,
D_est = D_est,
Psi_est = Psi_est
)
MSE_results = MSE_parameter(plist,tlist)
EMC
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/eval.R")
MSE_results = MSE_parameter(plist,tlist)
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/eval.R")
MSE_results = MSE_parameter(plist,tlist)
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
Psi_est
Psi_true
source("E:/Eebf/R/example_estimation.R")
Psi_est
Psi_true
source("E:/Eebf/R/example_estimation.R")
S
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
EMC
L_true
L_est
Rot_list = BF_permutation(G)
Rot_list
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
Q_est
source("E:/Eebf/R/eval.R")
MSE_results = MSE_parameter(plist,tlist,Q_est)
Psi_est
Psi_true
Q_est
L_est
Q_est * L_est
Z = Q_est * L_est
source("E:/Eebf/R/eval.R")
MSE_results = MSE_parameter(plist,tlist,Q_est)
source("E:/Eebf/R/eval.R")
MSE_results = MSE_parameter(plist,tlist,Q_est)
i=1
Rot = matrix(0,nrow = (G+1),ncol = (G+1))
Rot[1,1] = 1
Rot[2:(G+1),2:(G+1)] = Rot_list[[i]]
Rot
L_rot = L_true %*% Rot
L_rot
print(L_rot)
source("E:/Eebf/R/eval.R")
MSE_results = MSE_parameter(plist,tlist)
L_est
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
mean(y)
mean(Z)
print(mean(EMC_full))
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
Rot_list
for (i in 1:Rot_list){}
for (i in 1:lenght(Rot_list)){print(Rot_list[[i]] %*% t(Rot_list[[i]]))}
for (i in 1:length(Rot_list)){print(Rot_list[[i]] %*% t(Rot_list[[i]]))}
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
Psi_est
Psi_true
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/alm_cons.R")
source("E:/Eebf/R/alm_cons.R")
source("E:/Eebf/R/alm_cons.R")
source("E:/Eebf/R/test_alm_gd.R")
dist
source("E:/Eebf/R/test_alm_gd.R")
gd
dist
max(abs(dist))
source("E:/Eebf/R/test_alm_gd.R")
max(abs(dist))
source("E:/Eebf/R/test_alm_gd.R")
source("E:/Eebf/R/test_alm_gd.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/example_estimation.R")
L_true
Psi_true
D_true
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
print(mean(EMC_full))
print(mean(L_full))
print(mean(D_full))
print(mean(Psi_full))
print('Here is the results in correctedly learned parameters')
print(l_err/sum(EMC_full))
print(d_err/sum(EMC_full))
print(psi_err/sum(EMC_full))
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
L_list = 1+numeric(p)
L_list
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
y = 0.02389443 0.00573365 0.02389443 0.00573365 0.01361543 0.01361543
y = c(0.02389443 0.00573365 0.02389443 0.00573365 0.01361543 0.01361543)
y = c(0.02389443,0.00573365,0.02389443,0.00573365,0.01361543,0.01361543)
y
which.min(y)
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
S
View(S)
View(S)
source("E:/Eebf/R/utils.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/bic_step.R")
source("E:/Eebf/R/alm_cons.R")
source("E:/Eebf/R/generator.R")
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
print(sum(unlist(l_err))/sum(EMC_full))
print(sum(unlist(d_err))/sum(EMC_full))
print(sum(unlist(psi_err))/sum(EMC_full))
source("E:/Eebf/R/example_estimation.R")
psi_err
source("E:/Eebf/R/example_estimation.R")
Psi_est_list
LL = L_est_list[8]
LL
Rot_llist
Rot_list
Rot_list = BF_permutation(G)
Rot_list
rot = Rot_list[[4]]
rot
Rot = matrix(0,nrow = (1+G),ncol = (1+G))
Rot[1,1] = 1
Rot[2:(G+1),2:(G+1)] = rot
Rot
L_rot = LL %*% Rot
LL
Rot
L_rot = LL[[1]] %*% Rot
L_rot
rot = Rot_list[[5]]
Rot = matrix(0,nrow = (1+G),ncol = (1+G))
> Rot[1,1] = 1
Rot = matrix(0,nrow = (1+G),ncol = (1+G))
Rot[1,1] = 1
Rot[2:(G+1),2:(G+1)] = rot
Rot
L_rot = LL[[1]] %*% Rot
L_rot
LL
rot = Rot_list[[3]]
Rot = matrix(0,nrow = (1+G),ncol = (1+G))
Rot[1,1] = 1
Rot[2:(G+1),2:(G+1)] = rot
L_rot = LL[[1]] %*% Rot
L_rot
Sign = diag(diag(sign(L_rot %*%L_true)))
Sign = diag(diag(sign(t(L_rot) %*%L_true)))
Sign
sum((L_rot %*% Sign - L_true)^2)/(J*(1+G))
l_err
PP = Psi_est_list[[8]]
PP
DD = Psi_est_list[[8]]
PA = list(L_est = LL,D_est = DD,Psi_est = PP)
res = MSE_parameter(PA,tlist)
PA = list(L_est = LL[1],D_est = DD,Psi_est = PP)
source("E:/Eebf/R/eval.R")
res = MSE_parameter(PA,tlist)
PA = list(L_est = LL[[1]],D_est = DD,Psi_est = PP)
res = MSE_parameter(PA,tlist)
D_est
DD
DD = D_est_list[[8]]
PA = list(L_est = LL[[1]],D_est = DD,Psi_est = PP)
res = MSE_parameter(PA,tlist)
source("E:/Eebf/R/eval.R")
res = MSE_parameter(PA,tlist)
psi_err
source("E:/Eebf/R/eval.R")
res = MSE_parameter(PA,tlist)
L2 = LL[1]
L2
(sum(L2 - L_true)^2)/(J*(1+G))
L2 = LL[[1]]
(sum(L2 - L_true)^2)/(J*(1+G))
i=1
Rot = matrix(0,nrow = (G+1),ncol = (G+1))
Rot[1,1] = 1
Rot[2:(G+1),2:(G+1)] = Rot_list[[i]]
print(Rot)
L_rot = L_true %*% Rot
Sign = diag(diag(sign(t(L2) %*% L_rot)))
Sign
(sum(L1 - L_rot %*% Sign)^2)/(J*(1+G))
(sum(L2 - L_rot %*% Sign)^2)/(J*(1+G))
L2
L_rot
L_true
L_rot %*% Sign
L2
L2-L_true
L2-L_rot %*% Sign
L_rot %*% Sign
L2
Z = L2-L_rot %*% Sign
Z
(sum((L2 - L_rot %*% Sign)^2))/(J*(1+G))
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
l_err
psi_err
d_err
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/eval.R")
psi_err
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/eval.R")
Q_est
Average_correct(Q,Q_est)
source("E:/Eebf/R/example_bic.R")
G_est
source("E:/Eebf/R/bic_step.R")
source("E:/Eebf/R/example_bic.R")
G_est
source("E:/Eebf/R/example_bic.R")
G_est
source("E:/Eebf/R/utils.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/bic_step.R")
source("E:/Eebf/R/alm_cons.R")
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/generator.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/eval.R")
source("E:/Eebf/R/generator.R")
source("E:/Eebf/R/example_estimation.R")
L_true
L_est
source("E:/Eebf/R/example_estimation.R")
source("E:/Eebf/R/utils.R")
source("E:/Eebf/R/opt_step.R")
source("E:/Eebf/R/example_estimation.R")
quarto --version
library(devtools)
library(roxygen2)
document()
setwd("E:/Eebf")
document()
devtools::install()
devtools::check()
usethis::use_license("MIT")
devtools::use_license("MIT")
library(usethis)
usethis::use_license("MIT")
document()
document()
devtools::check()
usethis::use_license("MIT")
ls("package:usethis")
use_mit_license()
check()
list.files()
devtools::install()
source("C:/Users/qqing/Desktop/版本3/example_estimation.R")
source("C:/Users/qqing/Desktop/版本3/example_bic.R")
source("C:/Users/qqing/Desktop/版本3/example_bic.R")
document()
check()
use_gpl_license()
